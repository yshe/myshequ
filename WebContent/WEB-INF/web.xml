<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>easeshop</display-name>
  <welcome-file-list>
    
    <welcome-file>index.jsp</welcome-file>

  </welcome-file-list>
  <!-- 加载所有的配置文件 -->  
  <context-param>  
    <param-name>contextConfigLocation</param-name>  
    <param-value>classpath:applicationContext*.xml</param-value>  
  </context-param>  
  <!-- 配置Spring监听 -->  
  <listener>  
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
  </listener>
  <!-- 配置 DispatcherServlet -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置 DispatcherServlet 的一个初始化参数: 配置 SpringMVC 配置文件的位置和名称 -->
		<!-- 
			实际上也可以不通过 contextConfigLocation 来配置 SpringMVC 的配置文件, 而使用默认的.
			默认的配置文件为: /WEB-INF/<servlet-name>-servlet.xml
		-->
		
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		
		<load-on-startup>1</load-on-startup>

		<async-supported>true</async-supported>

		

	</servlet>

	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
  
   <!-- 配置字符集 -->  
  <!-- <filter>  
    <filter-name>encodingFilter</filter-name>  
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
    <init-param>  
        <param-name>encoding</param-name>  
        <param-value>UTF-8</param-value>  
    </init-param>  
    <init-param>  
        <param-name>forceEncoding</param-name>  
        <param-value>true</param-value>  
    </init-param>  
  </filter>  
  <filter-mapping>  
    <filter-name>encodingFilter</filter-name>  
    <url-pattern>/*</url-pattern>  
  </filter-mapping>   -->
  
  
<!--  <filter>
<filter-name>setCharacterEncodingFilter</filter-name>
<filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
<init-param>
   <param-name>encoding</param-name>
   <param-value>UTF-8</param-value>
</init-param>
</filter>
<filter-mapping>
<filter-name>setCharacterEncodingFilter</filter-name>
<url-pattern>/*</url-pattern>
</filter-mapping> -->
  
  
  
  
      <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
  <!-- 配置Session -->  
<!--  <filter>  
    <filter-name>openSession</filter-name>  
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>  
  </filter>  
  <filter-mapping>  
    <filter-name>openSession</filter-name>  
    <url-pattern>/*</url-pattern>  
  </filter-mapping>  
   -->
   <filter> 
 <filter-name>openSessionInView</filter-name> 
 <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class> 
 <init-param> 
 <param-name>sessionFactoryBeanName</param-name> 
 <param-value>sessionFactory</param-value> 
 </init-param> 
 </filter>

 <filter-mapping> 
 <filter-name>openSessionInView</filter-name> 
 <url-pattern>/*</url-pattern> 
 </filter-mapping>
  <!--     配置找不到页面时返回的页面 -->  
  <error-page>   
      <error-code>404</error-code>   
      <location>/error/404.html</location>   
  </error-page>   
  <!-- 会话超时配置（单位为分钟） -->
  <session-config> 
	    <session-timeout>30</session-timeout> 
	</session-config>
  
  <!-- Shiro配置 -->    
 	<!--   <filter>
	    <filter-name>shiroFilter</filter-name>    
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>    
	  </filter>    
	  <filter-mapping>    
	    <filter-name>shiroFilter</filter-name>    
	    <url-pattern>/*</url-pattern>    
	  </filter-mapping> -->


  
  
</web-app>